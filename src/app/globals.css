@tailwind base;
@tailwind components;
@tailwind utilities;

<<<<<<< Updated upstream
:root {
  --foreground: #171717;
  --background: #ffffff;
}
=======
@layer base {
  :root {
    --background: #ffffff;
    --foreground: #171717;
    --color-background: var(--background);
    --color-foreground: var(--foreground);
    --font-sans: var(--font-geist-sans);
    --font-mono: var(--font-geist-mono);
  }
>>>>>>> Stashed changes

  @media (prefers-color-scheme: dark) {
    :root {
      --background: #0a0a0a;
      --foreground: #ededed;
    }
  }

<<<<<<< Updated upstream
@media (prefers-color-scheme: dark) {
  :root {
    --foreground: #ededed;
    --background: #0a0a0a;
=======
  body {
    @apply bg-background text-foreground font-sans antialiased;
>>>>>>> Stashed changes
  }
}

@layer components {
  .btn-primary {
    @apply px-4 py-2 bg-gradient-to-r from-blue-500 to-blue-600 
           text-white rounded-lg font-semibold
           hover:from-blue-600 hover:to-blue-700
           transform hover:scale-105 transition-all duration-300
           shadow-lg hover:shadow-xl active:scale-95;
  }

<<<<<<< Updated upstream
=======
  .card {
    @apply bg-white/80 dark:bg-gray-800/80 p-6 rounded-xl shadow-lg 
           backdrop-blur-sm border border-white/20 dark:border-gray-700/20;
  }

  .input-field {
    @apply w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600
           bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100
           focus:ring-2 focus:ring-blue-500 focus:border-transparent
           transition-all duration-200;
  }
}

>>>>>>> Stashed changes
@layer utilities {
  .grid-cols-diag {
    grid-template-areas: 
      "a . ."
      ". b ."
      ". . c";
  }
  
  .grid-cols-special {
    grid-template-areas: 
      "a . b"
      ". c ."
      "d . e";
  }
  
  .animate-spin-slow {
    animation: spin 1s linear infinite;
  }
  
  .animate-float-eagle {
    animation: float-eagle 6s ease-in-out infinite;
  }
  
  .animate-pulse-slow {
    animation: pulse-slow 3s ease-in-out infinite;
  }

  .animate-fadeIn {
    animation: fadeIn 0.5s ease-out;
  }

  .animate-slideUp {
    animation: slideUp 0.5s ease-out;
  }

  .animate-float-eagle-small {
    animation: float-eagle-small 4s ease-in-out infinite;
  }
}

/* Animations */
@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes float-eagle {
  0%, 100% { transform: translateY(0) rotate(-5deg); }
  50% { transform: translateY(-20px) rotate(5deg); }
}

@keyframes float-eagle-small {
  0%, 100% { transform: translateY(0) rotate(-3deg); }
  50% { transform: translateY(-8px) rotate(3deg); }
}

@keyframes pulse-slow {
  0%, 100% { opacity: 1; transform: scale(1); }
  50% { opacity: 0.8; transform: scale(0.95); }
}

@keyframes fadeIn {
<<<<<<< Updated upstream
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes slideUp {
  0% { transform: translateY(20px); opacity: 0; }
  100% { transform: translateY(0); opacity: 1; }
=======
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideUp {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
>>>>>>> Stashed changes
}

@keyframes slideDown {
  0% { transform: translateY(-20px); opacity: 0; }
  100% { transform: translateY(0); opacity: 1; }
}

@keyframes scaleUp {
  0% { transform: scale(0.9); opacity: 0; }
  100% { transform: scale(1); opacity: 1; }
}

.animation-delay-2000 {
  animation-delay: 2s;
}

.animation-delay-4000 {
  animation-delay: 4s;
}

<<<<<<< Updated upstream
/* Add these classes to avoid Tailwind purging them */
.animate-fadeIn {
  animation: fadeIn 0.5s ease-in-out;
=======
/* Question Modal Animations */
@keyframes scaleIn {
  from { transform: scale(0.95); opacity: 0; }
  to { transform: scale(1); opacity: 1; }
>>>>>>> Stashed changes
}

.animate-slideUp {
  animation: slideUp 0.5s ease-in-out;
}

.animate-slideDown {
  animation: slideDown 0.5s ease-in-out;
}

.animate-scaleUp {
  animation: scaleUp 0.5s ease-in-out;
}

.animate-blob {
  animation: blob 7s infinite;
}

@keyframes blob {
  0% {
    transform: translate(0px, 0px) scale(1);
  }
  33% {
    transform: translate(30px, -50px) scale(1.1);
  }
  66% {
    transform: translate(-20px, 20px) scale(0.9);
  }
  100% {
    transform: translate(0px, 0px) scale(1);
  }
}

/* Winner animation */
@keyframes winner {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

.winner-animation {
  animation: winner 2s ease-in-out infinite;
}

/* Slide in animation */
@keyframes slideIn {
  from {
    transform: translateX(-20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

.animate-slideIn {
  animation: slideIn 0.5s ease-out forwards;
}

/* Scrollbar Styling */
::-webkit-scrollbar {
  @apply w-2.5 h-2.5;
}

::-webkit-scrollbar-track {
  @apply bg-transparent;
}

::-webkit-scrollbar-thumb {
  @apply bg-gray-300 dark:bg-gray-600 rounded-full;
}

::-webkit-scrollbar-thumb:hover {
  @apply bg-gray-400 dark:bg-gray-500;
}

/* For Firefox */
* {
  scrollbar-width: none;
}

/* For IE and Edge */
* {
  -ms-overflow-style: none;
}

/* Ensure the root element doesn't scroll */
html, body {
  overflow: hidden;
  height: 100%;
  width: 100%;
}

/* Make the main content area scrollable if needed */
main {
  height: 100vh;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch; /* For smooth scrolling on iOS */
}

/* Game Board Styles */
.game-board-container {
  perspective: 1000px;
}

.game-board {
  transform-style: preserve-3d;
  transition: transform 0.5s ease-out;
}

.game-board:hover {
  transform: rotateX(15deg);
}

/* Player Token Animations */
.player-token {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.player-token:hover {
  transform: scale(1.2) rotate(12deg);
  z-index: 50;
}

/* Question Card Animations */
.question-card {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.question-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
}

/* Dice Animation */
.dice-container {
  perspective: 1200px;
}

.dice {
  transform-style: preserve-3d;
  transition: transform 0.6s ease-out;
}

.dice.rolling {
  animation: rollDice 1s ease-out;
}

@keyframes rollDice {
  0% {
    transform: rotateX(0) rotateY(0) rotateZ(0);
  }
  100% {
    transform: rotateX(720deg) rotateY(720deg) rotateZ(720deg);
  }
}
